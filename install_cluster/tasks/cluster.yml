---
# tasks file for install_cluster

# TODO: Validate cluster settings
- name : Count the hosts to be discovered
  set_fact:
    inventory_hosts: "{{ groups['masters'] }}"

- name: Join list for workers and masters
  set_fact:
    nodes: "{{ groups['masters'] | default([]) }}"
    inventory_nodes: "{{ groups['masters'] | default([]) }}"

- name: Wait for 20 min until all the hosts are discovered
  sonofspike.ocm.discover_host:
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    url_assisted_installer_cluster: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
  register: cluster
  until: ( cluster.json.hosts | length == inventory_nodes | length ) and ( cluster.json.status == "pending-for-input")
  retries: 20
  delay: 60
  when: install | bool == True

- debug:
    var: cluster.json
    
- name: Patch discovered hosts
  include_tasks: hosts_discovery.yml
  with_items:
    - "{{ cluster.json.hosts }}"
  loop_control:
    loop_var: discovered_host
  no_log: True

# Patch the cluster with the API Virtual IP
- name: Patch cluster with API Virtual IP
  block:
  - name: patch cluster  
    uri:
      url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
      method: PATCH
      headers:
        Authorization: "Bearer {{ access_token }}"
        Content-Type: "application/json"
      status_code: [201]
      return_content: True
      body_format: json
      body: {
          "vip_dhcp_allocation": "{{ VIP_DHCP_ALLOCATION | lower | bool }}",
          "ingress_vip": "{{ INGRESS_VIP }}",
          "api_vip": "{{ API_VIP }}"
      }
    when: 
      - install | bool == True and
        sno == False
    register: http_reply
  rescue:
    - include_role:
        name: sonofspike.ocm.refresh_token
    - name: patch cluster  
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [201]
        return_content: True
        body_format: json
        body: {
            "vip_dhcp_allocation": "{{ VIP_DHCP_ALLOCATION | lower | bool }}",
            "ingress_vip": "{{ INGRESS_VIP }}",
            "api_vip": "{{ API_VIP }}"
        }
      when: 
        - install | bool == True and
          sno == False
      register: http_reply

- name: Patch cluster with host networks (SNO)
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: PATCH
    headers:
      Authorization: "Bearer {{ access_token }}"
      Content-Type: "application/json"
    status_code: [201]
    return_content: True
    body_format: json
    body: {
        "host_networks": "{{ CLUSTER_NETWORK_HOST }}"
    }
  when: 
    - install | bool == True and
      sno == True
  register: http_reply

- debug:
    var: http_reply.json
  when: debug | bool == True

#- import_role:
#    name: sonofspike.ocm.refresh_token

# Monitor cluster discovery
- name: Wait for 20 min until the cluster is ready
  block:
  - name: cluster ready
    uri:
      url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
      method: GET
      headers:
        Authorization: "Bearer {{ access_token }}"
        Content-Type: "application/json"
      status_code: [200, 201]
      return_content: True
    register: cluster
    until: "cluster.json.status == 'ready'"
    retries: 20
    delay: 60
    when: install | bool == True
  rescue:
    - include_role:
        name: sonofspike.ocm.refresh_token
    
    - name: Wait for 20 min until the cluster is ready
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [200, 201]
        return_content: True
      register: cluster
      until: "cluster.json.status == 'ready'"
      retries: 20
      delay: 60
      when: install | bool == True

# Install cluster
- name: Install cluster
  block:
  - name: install cluster
    uri:
      url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/actions/install"
      method: POST
      headers:
        Authorization: "Bearer {{ access_token }}"
        Content-Type: "application/json"
      status_code: [202]
      return_content: True
      body_format: json
      body: { }
    when: install | bool == True
    register: http_reply
  rescue:
    - include_role:
        name: sonofspike.ocm.refresh_token
    - name: install cluster
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/actions/install"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        status_code: [202]
        return_content: True
        body_format: json
        body: { }
      when: install | bool == True
      register: http_reply
      
- name: Debug http_reply
  debug:
    var: http_reply.json
  when: debug | bool == True and install | bool == True


